name: Deployment

on:
  push:
    tags:
      - v*

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v3

    - name: Setup Node.js environment
      uses: actions/setup-node@v3.0.0
      with:
        node-version-file: .nvmrc

    - uses: pnpm/action-setup@v2
      name: Install pnpm
      id: pnpm-install
      with:
        version: 8
        run_install: false

    - name: Get pnpm store directory
      id: pnpm-cache
      run: |
        echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

    - uses: actions/cache@v3
      name: Setup pnpm cache
      with:
        path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install dependencies
      run: pnpm install

    - name: Run build
      run: pnpm docs:build

    - name: Pack it
      shell: bash
      run: |
        tar -czvf package-${{ github.ref_name }}.tar.gz -C docs/.vitepress/dist .

    - name: Install SSH key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SSH_KEY }}
        known_hosts: ${{ secrets.KNOWN_HOSTS }}

    - name: Upload & Deploy
      shell: bash
      env:
        SERVER: '${{ secrets.SERVER }}'
        USER: '${{ secrets.USER }}'
        COMMIT: '${{ github.ref_name }}'
        HOME_DIR: '${{ secrets.HOME_DIR }}'
        BASE_DIR: 'plugins.femundfilou.com/kirby-moments'
        RELEASE_DIR: 'releases'
        ROOT_DIR: 'current'
        PREFIX: 'r'
        PUBLIC_FOLDER: 'public'
        ENABLE_HTACCESS_CONFIG: 0
      run: |
        rsync -a -e "ssh -o StrictHostKeyChecking=no" --delete package-$COMMIT.tar.gz $USER@$SERVER:$HOME_DIR
        ssh -o StrictHostKeyChecking=no $USER@$SERVER "export COMMIT='$COMMIT' HOME_DIR='$HOME_DIR' BASE_DIR='$BASE_DIR' ROOT_DIR='$ROOT_DIR' RELEASE_DIR='$RELEASE_DIR' PREFIX='$PREFIX' PUBLIC_FOLDER='$PUBLIC_FOLDER' ENABLE_HTACCESS_CONFIG='$ENABLE_HTACCESS_CONFIG'; bash -s" < deploy.sh
